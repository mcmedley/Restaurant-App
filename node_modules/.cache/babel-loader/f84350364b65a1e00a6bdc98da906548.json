{"remainingRequest":"C:\\Users\\Matt Medley\\Desktop\\eat24\\g01\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Matt Medley\\Desktop\\eat24\\g01\\node_modules\\vuetify-loader\\lib\\loader.js??ref--18-0!C:\\Users\\Matt Medley\\Desktop\\eat24\\g01\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Matt Medley\\Desktop\\eat24\\g01\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Matt Medley\\Desktop\\eat24\\g01\\src\\views\\Location.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Matt Medley\\Desktop\\eat24\\g01\\src\\views\\Location.vue","mtime":1588347906081},{"path":"C:\\Users\\Matt Medley\\Desktop\\eat24\\g01\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Matt Medley\\Desktop\\eat24\\g01\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Matt Medley\\Desktop\\eat24\\g01\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\Matt Medley\\Desktop\\eat24\\g01\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Matt Medley\\Desktop\\eat24\\g01\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcudHJpbSI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBNYXAgZnJvbSAiLi4vY29tcG9uZW50cy9NYXAiOwppbXBvcnQgeyBldmVudEJ1cyB9IGZyb20gIkAvZXZlbnQtYnVzLmpzIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJsb2NhdGlvbiIsCiAgY29tcG9uZW50czogewogICAgTWFwOiBNYXAKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB0aGVMb2NhdGlvbjogIiIsCiAgICAgIHRoZUtleXdvcmQ6ICIiLAogICAgICBjaXR5U3RhdGU6ICIiLAogICAgICBjdXJQbGFjZTogbnVsbCwKICAgICAgZ2VvY29kZXI6IG51bGwKICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICBldmVudEJ1cy4kb24oImdvb2dsZUluaXQiLCBmdW5jdGlvbiAoKSB7CiAgICAgIF90aGlzLmluaXRNYXBBdXRvY29tcGxldGUoKTsKICAgIH0pOwogICAgZXZlbnRCdXMuJG9uKCJtYXBBZGRyZXNzIiwgZnVuY3Rpb24gKHBheWxvYWQpIHsKICAgICAgX3RoaXMudXBkYXRlQWRkcmVzc0Zyb21NYXAocGF5bG9hZCk7CiAgICB9KTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGxhdW5jaFBsYWNlc1NlYXJjaDogZnVuY3Rpb24gbGF1bmNoUGxhY2VzU2VhcmNoKCkgewogICAgICBldmVudEJ1cy4kZW1pdCgibGF1bmNoS2V5d29yZFNlYXJjaCIsIHRoaXMudGhlS2V5d29yZCk7CiAgICB9LAogICAgZG9DbGVhckxvY2F0aW9uOiBmdW5jdGlvbiBkb0NsZWFyTG9jYXRpb24oKSB7CiAgICAgIHRoaXMudGhlTG9jYXRpb24gPSAiIjsKICAgICAgdGhpcy5jdXJQbGFjZSA9ICIiOwogICAgfSwKICAgIGNpdHlTdGF0ZUhlbHBlcjogZnVuY3Rpb24gY2l0eVN0YXRlSGVscGVyKHN0cikgewogICAgICB2YXIgY2l0eSA9ICIiOwogICAgICB2YXIgc3RhdGUgPSAiIjsKICAgICAgaWYgKCFzdHIpIHJldHVybiAiIjsKICAgICAgdmFyIGFkZHJlc3NQYXJ0cyA9IHN0ci5zcGxpdCgiLCIpOwogICAgICBjaXR5ID0gYWRkcmVzc1BhcnRzWzBdOwogICAgICBzdGF0ZSA9IGFkZHJlc3NQYXJ0c1sxXS50cmltKCkuc3Vic3RyaW5nKDAsIDIpOwogICAgICByZXR1cm4gIiIuY29uY2F0KGNpdHksICIsIikuY29uY2F0KHN0YXRlKTsKICAgIH0sCiAgICB1cGRhdGVBZGRyZXNzRnJvbU1hcDogZnVuY3Rpb24gdXBkYXRlQWRkcmVzc0Zyb21NYXAocGF5bG9hZCkgewogICAgICB2YXIgZmlyc3RBZGRyZXNzID0gcGF5bG9hZFswXS5mb3JtYXR0ZWRfYWRkcmVzczsKICAgICAgdGhpcy50aGVMb2NhdGlvbiA9IGZpcnN0QWRkcmVzczsKICAgICAgdGhpcy5jdXJQbGFjZSA9IHRoaXMudGhlTG9jYXRpb247CiAgICAgIHRoaXMuY2l0eVN0YXRlID0gdGhpcy5nZXRDaXR5U3RhdGUocGF5bG9hZCk7CiAgICB9LAogICAgaW5pdE1hcEF1dG9jb21wbGV0ZTogZnVuY3Rpb24gaW5pdE1hcEF1dG9jb21wbGV0ZSgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB0aGlzLmdlb2NvZGVyID0gbmV3IGdvb2dsZS5tYXBzLkdlb2NvZGVyKCk7CiAgICAgIHZhciBpbnB1dCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJwYWMtaW5wdXQiKTsKICAgICAgdmFyIGF1dG9jb21wbGV0ZSA9IG5ldyBnb29nbGUubWFwcy5wbGFjZXMuQXV0b2NvbXBsZXRlKGlucHV0KTsKICAgICAgZ29vZ2xlLm1hcHMuZXZlbnQuYWRkTGlzdGVuZXIoYXV0b2NvbXBsZXRlLCAicGxhY2VfY2hhbmdlZCIsIGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpczIuY3VyUGxhY2UgPSBhdXRvY29tcGxldGUuZ2V0UGxhY2UoKTsKICAgICAgICBfdGhpczIudGhlTG9jYXRpb24gPSBfdGhpczIuY3VyUGxhY2UuZm9ybWF0dGVkX2FkZHJlc3M7CgogICAgICAgIGlmICh0eXBlb2YgX3RoaXMyLmN1clBsYWNlLmZvcm1hdHRlZF9hZGRyZXNzICE9PSAidW5kZWZpbmVkIikgewogICAgICAgICAgX3RoaXMyLmNpdHlTdGF0ZSA9IF90aGlzMi5jaXR5U3RhdGVIZWxwZXIoX3RoaXMyLmN1clBsYWNlLmZvcm1hdHRlZF9hZGRyZXNzKTsKICAgICAgICAgIGV2ZW50QnVzLiRlbWl0KCJuZXdUZXh0QWRkcmVzcyIsIF90aGlzMi5jdXJQbGFjZSk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["Location.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,OAAA,GAAA,MAAA,mBAAA;AACA,SAAA,QAAA,QAAA,gBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,GAAA,EAAA;AADA,GAFA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,WAAA,EAAA,EADA;AAEA,MAAA,UAAA,EAAA,EAFA;AAGA,MAAA,SAAA,EAAA,EAHA;AAIA,MAAA,QAAA,EAAA,IAJA;AAKA,MAAA,QAAA,EAAA;AALA,KAAA;AAOA,GAbA;AAeA,EAAA,OAAA,EAAA,mBAAA;AAAA;;AACA,IAAA,QAAA,CAAA,GAAA,CAAA,YAAA,EAAA,YAAA;AACA,MAAA,KAAA,CAAA,mBAAA;AACA,KAFA;AAIA,IAAA,QAAA,CAAA,GAAA,CAAA,YAAA,EAAA,UAAA,OAAA,EAAA;AACA,MAAA,KAAA,CAAA,oBAAA,CAAA,OAAA;AACA,KAFA;AAGA,GAvBA;AAwBA,EAAA,OAAA,EAAA;AACA,IAAA,kBADA,gCACA;AACA,MAAA,QAAA,CAAA,KAAA,CAAA,qBAAA,EAAA,KAAA,UAAA;AACA,KAHA;AAKA,IAAA,eALA,6BAKA;AACA,WAAA,WAAA,GAAA,EAAA;AACA,WAAA,QAAA,GAAA,EAAA;AACA,KARA;AAUA,IAAA,eAVA,2BAUA,GAVA,EAUA;AACA,UAAA,IAAA,GAAA,EAAA;AACA,UAAA,KAAA,GAAA,EAAA;AAEA,UAAA,CAAA,GAAA,EAAA,OAAA,EAAA;AAEA,UAAA,YAAA,GAAA,GAAA,CAAA,KAAA,CAAA,GAAA,CAAA;AACA,MAAA,IAAA,GAAA,YAAA,CAAA,CAAA,CAAA;AACA,MAAA,KAAA,GAAA,YAAA,CAAA,CAAA,CAAA,CAAA,IAAA,GAAA,SAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AACA,uBAAA,IAAA,cAAA,KAAA;AACA,KApBA;AAsBA,IAAA,oBAtBA,gCAsBA,OAtBA,EAsBA;AACA,UAAA,YAAA,GAAA,OAAA,CAAA,CAAA,CAAA,CAAA,iBAAA;AACA,WAAA,WAAA,GAAA,YAAA;AACA,WAAA,QAAA,GAAA,KAAA,WAAA;AACA,WAAA,SAAA,GAAA,KAAA,YAAA,CAAA,OAAA,CAAA;AACA,KA3BA;AA6BA,IAAA,mBA7BA,iCA6BA;AAAA;;AACA,WAAA,QAAA,GAAA,IAAA,MAAA,CAAA,IAAA,CAAA,QAAA,EAAA;AAEA,UAAA,KAAA,GAAA,QAAA,CAAA,cAAA,CAAA,WAAA,CAAA;AACA,UAAA,YAAA,GAAA,IAAA,MAAA,CAAA,IAAA,CAAA,MAAA,CAAA,YAAA,CAAA,KAAA,CAAA;AAEA,MAAA,MAAA,CAAA,IAAA,CAAA,KAAA,CAAA,WAAA,CAAA,YAAA,EAAA,eAAA,EAAA,YAAA;AACA,QAAA,MAAA,CAAA,QAAA,GAAA,YAAA,CAAA,QAAA,EAAA;AACA,QAAA,MAAA,CAAA,WAAA,GAAA,MAAA,CAAA,QAAA,CAAA,iBAAA;;AAEA,YAAA,OAAA,MAAA,CAAA,QAAA,CAAA,iBAAA,KAAA,WAAA,EAAA;AACA,UAAA,MAAA,CAAA,SAAA,GAAA,MAAA,CAAA,eAAA,CACA,MAAA,CAAA,QAAA,CAAA,iBADA,CAAA;AAGA,UAAA,QAAA,CAAA,KAAA,CAAA,gBAAA,EAAA,MAAA,CAAA,QAAA;AACA;AACA,OAVA;AAWA;AA9CA;AAxBA,CAAA","sourcesContent":["<template>\r\n  <v-app>\r\n    <v-content>\r\n      <v-container>\r\n        <v-layout row>\r\n          <v-flex xs5>\r\n            <v-text-field\r\n              outlined\r\n              label=\"Location\"\r\n              placeholder=\" \"\r\n              append-icon=\"close\"\r\n              @click:append=\"doClearLocation\"\r\n              v-model=\"theLocation\"\r\n              id=\"pac-input\"\r\n            >\r\n            </v-text-field>\r\n          </v-flex>\r\n        </v-layout>\r\n\r\n        <Map />\r\n      </v-container>\r\n    </v-content>\r\n  </v-app>\r\n</template>\r\n\r\n<script>\r\nimport Map from \"../components/Map\";\r\nimport { eventBus } from \"@/event-bus.js\";\r\n\r\nexport default {\r\n  name: \"location\",\r\n  components: {\r\n    Map,\r\n  },\r\n  data() {\r\n    return {\r\n      theLocation: \"\",\r\n      theKeyword: \"\",\r\n      cityState: \"\",\r\n      curPlace: null,\r\n      geocoder: null,\r\n    };\r\n  },\r\n\r\n  mounted: function() {\r\n    eventBus.$on(\"googleInit\", () => {\r\n      this.initMapAutocomplete();\r\n    });\r\n\r\n    eventBus.$on(\"mapAddress\", (payload) => {\r\n      this.updateAddressFromMap(payload);\r\n    });\r\n  },\r\n  methods: {\r\n    launchPlacesSearch() {\r\n      eventBus.$emit(\"launchKeywordSearch\", this.theKeyword);\r\n    },\r\n\r\n    doClearLocation() {\r\n      this.theLocation = \"\";\r\n      this.curPlace = \"\";\r\n    },\r\n\r\n    cityStateHelper(str) {\r\n      let city = \"\";\r\n      let state = \"\";\r\n\r\n      if (!str) return \"\";\r\n\r\n      const addressParts = str.split(\",\");\r\n      city = addressParts[0];\r\n      state = addressParts[1].trim().substring(0, 2);\r\n      return `${city},${state}`;\r\n    },\r\n\r\n    updateAddressFromMap(payload) {\r\n      const firstAddress = payload[0].formatted_address;\r\n      this.theLocation = firstAddress;\r\n      this.curPlace = this.theLocation;\r\n      this.cityState = this.getCityState(payload);\r\n    },\r\n\r\n    initMapAutocomplete() {\r\n      this.geocoder = new google.maps.Geocoder();\r\n\r\n      const input = document.getElementById(\"pac-input\");\r\n      const autocomplete = new google.maps.places.Autocomplete(input);\r\n\r\n      google.maps.event.addListener(autocomplete, \"place_changed\", () => {\r\n        this.curPlace = autocomplete.getPlace();\r\n        this.theLocation = this.curPlace.formatted_address;\r\n\r\n        if (typeof this.curPlace.formatted_address !== \"undefined\") {\r\n          this.cityState = this.cityStateHelper(\r\n            this.curPlace.formatted_address\r\n          );\r\n          eventBus.$emit(\"newTextAddress\", this.curPlace);\r\n        }\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.v-input__icon--append {\r\n  cursor: pointer;\r\n  pointer-events: auto;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views"}]}