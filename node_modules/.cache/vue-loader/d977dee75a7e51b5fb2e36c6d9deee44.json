{"remainingRequest":"C:\\Users\\Matt Medley\\Desktop\\eat24\\g01\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Matt Medley\\Desktop\\eat24\\g01\\src\\views\\Location.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\Matt Medley\\Desktop\\eat24\\g01\\src\\views\\Location.vue","mtime":1588347906081},{"path":"C:\\Users\\Matt Medley\\Desktop\\eat24\\g01\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Matt Medley\\Desktop\\eat24\\g01\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Matt Medley\\Desktop\\eat24\\g01\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Matt Medley\\Desktop\\eat24\\g01\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\Matt Medley\\Desktop\\eat24\\g01\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Matt Medley\\Desktop\\eat24\\g01\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi52LWlucHV0X19pY29uLS1hcHBlbmQgew0KICBjdXJzb3I6IHBvaW50ZXI7DQogIHBvaW50ZXItZXZlbnRzOiBhdXRvOw0KfQ0K"},{"version":3,"sources":["Location.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyGA;AACA;AACA;AACA","file":"Location.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <v-app>\r\n    <v-content>\r\n      <v-container>\r\n        <v-layout row>\r\n          <v-flex xs5>\r\n            <v-text-field\r\n              outlined\r\n              label=\"Location\"\r\n              placeholder=\" \"\r\n              append-icon=\"close\"\r\n              @click:append=\"doClearLocation\"\r\n              v-model=\"theLocation\"\r\n              id=\"pac-input\"\r\n            >\r\n            </v-text-field>\r\n          </v-flex>\r\n        </v-layout>\r\n\r\n        <Map />\r\n      </v-container>\r\n    </v-content>\r\n  </v-app>\r\n</template>\r\n\r\n<script>\r\nimport Map from \"../components/Map\";\r\nimport { eventBus } from \"@/event-bus.js\";\r\n\r\nexport default {\r\n  name: \"location\",\r\n  components: {\r\n    Map,\r\n  },\r\n  data() {\r\n    return {\r\n      theLocation: \"\",\r\n      theKeyword: \"\",\r\n      cityState: \"\",\r\n      curPlace: null,\r\n      geocoder: null,\r\n    };\r\n  },\r\n\r\n  mounted: function() {\r\n    eventBus.$on(\"googleInit\", () => {\r\n      this.initMapAutocomplete();\r\n    });\r\n\r\n    eventBus.$on(\"mapAddress\", (payload) => {\r\n      this.updateAddressFromMap(payload);\r\n    });\r\n  },\r\n  methods: {\r\n    launchPlacesSearch() {\r\n      eventBus.$emit(\"launchKeywordSearch\", this.theKeyword);\r\n    },\r\n\r\n    doClearLocation() {\r\n      this.theLocation = \"\";\r\n      this.curPlace = \"\";\r\n    },\r\n\r\n    cityStateHelper(str) {\r\n      let city = \"\";\r\n      let state = \"\";\r\n\r\n      if (!str) return \"\";\r\n\r\n      const addressParts = str.split(\",\");\r\n      city = addressParts[0];\r\n      state = addressParts[1].trim().substring(0, 2);\r\n      return `${city},${state}`;\r\n    },\r\n\r\n    updateAddressFromMap(payload) {\r\n      const firstAddress = payload[0].formatted_address;\r\n      this.theLocation = firstAddress;\r\n      this.curPlace = this.theLocation;\r\n      this.cityState = this.getCityState(payload);\r\n    },\r\n\r\n    initMapAutocomplete() {\r\n      this.geocoder = new google.maps.Geocoder();\r\n\r\n      const input = document.getElementById(\"pac-input\");\r\n      const autocomplete = new google.maps.places.Autocomplete(input);\r\n\r\n      google.maps.event.addListener(autocomplete, \"place_changed\", () => {\r\n        this.curPlace = autocomplete.getPlace();\r\n        this.theLocation = this.curPlace.formatted_address;\r\n\r\n        if (typeof this.curPlace.formatted_address !== \"undefined\") {\r\n          this.cityState = this.cityStateHelper(\r\n            this.curPlace.formatted_address\r\n          );\r\n          eventBus.$emit(\"newTextAddress\", this.curPlace);\r\n        }\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.v-input__icon--append {\r\n  cursor: pointer;\r\n  pointer-events: auto;\r\n}\r\n</style>\r\n"]}]}